classname=mod.sin.wyvern.WyvernMods
classpath=WyvernMods.jar
sharedClassLoader=true

# Bdew's Server Mod Tools mod is required for operation of WyvernMods.
depend.requires=bdew_server_mod_tools

# These other mods are required to be installed. Each one is able to be configured to avoid operation.
depend.import=SinduskLibrary,TreasureHunting,DiscordRelay,DUSKombat

# If automata is installed, it should be loaded first to avoid conflict. It is not required.
depend.suggests=automata

# -- Introduction -- #
# WyvernMods contains many different modules. Each configuration section is separated based on the module it controls.
# Each module has a "master" configuration which completely enables or disables the module.
# If a master configuration is disabled, all the further configurations do not need to be adjusted.
# There may also be sub-modules that can be enabled and disabled.
# Module configurations are separated by formatted comments in this configuration file:

## >> MAJOR MODULE << ##
# > MINOR MODULE < #
# > END MINOR MODULE < #
## >> END MAJOR MODULE << ##

# Finally, there will also be configurations which are open-ended and allow an unlimited amount of configurations.
# These configurations will be annotated with "-#" appended to the configuration.
# These will always be identified with a dash in the configuration. For example, "itemCreation-1:"
# Every individual configuration made in this way needs it's own unique number after it (called an index).
# Multiple configurations with the same index will not apply properly. Make sure each configuration has it's own unique index.
# Finally, all multiple configurations will be separated using a colon (:) instead of an equals sign (=).

## >> MISCELLANEOUS CHANGES MODULE << ##
## The Miscellaneous Changes module includes various bugfixes and QoL improvements that affect gameplay.
enableMiscChangesModule=true

# > INFO TAB < #
# The information tab is a tab which appears for all players on login.
enableInfoTab=true
#infoTabName: The name of the tab to display when the players log in.
infoTabName=Server
#infoTabLine-#: Line to be added to the info tab on login.
# This is a multiple configuration option.
infoTabLine-1:Server Thread: https://forum.wurmonline.com/index.php?/topic/162067-revenant-modded-pvepvp-3x-action-new-skillgain/
infoTabLine-2:Website/Maps: https://www.sarcasuals.com/
infoTabLine-3:Server Discord: https://discord.gg/r8QNXAC
infoTabLine-4:Server Data: https://docs.google.com/spreadsheets/d/1yjqTHoxUan4LIldI3jgrXZgXj1M2ENQ4MXniPUz0rE4
infoTabLine-5:Server Wiki/Documentation: https://docs.google.com/document/d/1cbPi7-vZnjaiYrENhaefzjK_Wz7_F1CcPYJtC6uCi98/edit?usp=sharing
infoTabLine-6:Patreon: https://www.patreon.com/sindusk
# > END INFO TAB < #

#ignoreBridgeChecks: Disable most bridge validity checks, allowing them to be built in/over/through houses.
ignoreBridgeChecks=true
#disableMailboxUsageWhileLoaded: Disables the usage of mailboxes while they're loaded in a vehicle.
# This option is used in tandem with the ability to allow mailboxes to be loaded.
# If they cannot be loaded, this option will do nothing.
disableMailboxUsageWhileLoaded=true
#increasedLegendaryCreatures: Changes the chances for a legendary creature (AKA "Uniques") to spawn when checked.
# This can be used for multiple purposes, including disabling natural unique spawns altogether.
# Use the next setting while this option is enabled to tweak how you want them to spawn.
increasedLegendaryCreatures=true
#increasedLegendaryFrequency: The amount of times to check for a legendary to spawn when they are checked (6 hours).
# 0 = Disable legendary creatures from spawning altogether.
# 1 = Vanilla settings for spawning legendary creatures.
# 2 = Double the default chance for legendary to spawn when checked.
# 5 = Five times the default chance for legendary to spawn when checked.
increasedLegendaryFrequency=5
#allowFacebreykerNaturalSpawn: Adds Facebreyker (custom creature from WyvernMods) to the natural spawn list for legendary creatures.
allowFacebreykerNaturalSpawn=true
#announcePlayerTitles: When players obtain a title, there will be a server message stating they've just earned it.
# The announcement ignores any title obtained on a PvP server, as well as any titles gained by GM's (power 1 or higher).
# This will also create a message in Discord via DiscordRelay to the "event" channel.
announcePlayerTitles=true
# TODO: Allow editing the tab that it announces the title and the discord channel it sends to.
#improveCombinedLeather: If leather is able to be combined (via other configuration), it will by default prevent improving items with higher QL than the material.
# This option overrides that interaction, and allows leather of any QL be used to improve despite it being able to be combined.
improveCombinedLeather=true
#allowModdedImproveTemplates: Enables the usage of modded improve templates while improving certain items (Spectral Hide & Glimmerscale).
allowModdedImproveTemplates=true
#fatigueActionOverride: Allows players to take fatiguing actions (improve, farming, mining, etc.) while not grounded.
# This means players can mine from a wagon, farm from a cart, improve on their horse, etc.
# An exception to this is destroy actions on PvP servers. They have special handling to disable their usage while mounted.
fatigueActionOverride=true
#fixPortalIssues: Fixes some kind of portal issues. Don't remember what caused this change to be made or what it does.
fixPortalIssues=true
#disableMinimumShieldDamage: By default, shields take a minimum of 0.01 damage each time they're hit.
# This option disables that threshhold and allows shields to take less than 0.01 damage when hit.
# Specifically, if a shield is made of adamantine or similar, it would always take less damage than one made from iron.
disableMinimumShieldDamage=true
#disableGMEmoteLimit: By default, players must wait 5 seconds before the sound from another emote will play.
# This option allows GM's (power 1 or higher) to bypass this limit.
# This change was made so I could rapidly slap my GM's or players when they upset me by binding a key with Bdew's custom actions mod.
# Instead of only seeing the event tab messages from the slap assault, they would also hear each and every excruciating slap.
disableGMEmoteLimit=true
#creatureArcheryWander: When a creature is struck by an arrow from a long distance, they will fail to acquire the player as a target.
# This prevents them from moving in to attack someone who is archering them.
# In some cases, players were able to abuse this to gain archery skill at zero risk.
# This option makes creatures wander slightly in a random direction after being hit by archery.
# Usually, this results in them moving close enough to the player to acquire them as a target
# and engage them in melee combat or far enough the player cannot archer anymore.
creatureArcheryWander=true
#globalDeathTabs: Broadcast death tabs to GL-Freedom on all servers.
# This does not override the Deaths tab on the server the player died on.
# It just humiliates them globally instead of just on that server.
globalDeathTabs=true
#disablePvPOnlyDeathTabs: Allows PvP deaths on a PvE server to be broadcast in the Deaths tab.
disablePvPOnlyDeathTabs=true
#fixLibilaCrossingIssues: There were issues where Libila priest faith would reset when crossing servers.
# This was a fix attempted to prevent it. It may no longer be necessary as of the 1.9 Priest Update but does no harm being enabled.
fixLibilaCrossingIssues=true
#higherFoodAffinities: Increases the potency of food affinity skill gains from 10% to 30%.
higherFoodAffinities=true
#TODO: Allow adjustment of the percentage increase (and potentially reduction) of food affinities.
#fasterCharcoalBurn: Increases the rate at which charcoal burns by double.
# It does this by triggering the "production" each time it ticks twice, applying double damage afterwards.
# It will produce the same amount of resources, but do so twice as quickly.
fasterCharcoalBurn=true
#TODO: Allow further adjustment of the rate at which charcoal burns.
#uncapTraderItemCount: By default, traders can only show 9 of each item they have in stock.
# This option removes that cap, and allows them to show their full stock of each item.
uncapTraderItemCount=true
#logExcessiveActions: Log any player performing more than 10 commands in a single second.
# This is useful to catch potential macro's, but also has false positives!
# It will log players who hold down a key for a command for example.
logExcessiveActions=true

# > DYNAMIC SKILL RATE < #
# Dynamic Skill Rate is a new skill rate system that adjusts the skill gain rate as skill increase.
# For reference, please see the Revenant Skill Gain graph: https://i.imgur.com/XQeMJjV.png
useDynamicSkillRate=true
#TODO: Add options to adjust the dynamic skill gain rates.
#> END DYNAMIC SKILL RATE < #

#reduceLockpickBreaking: Adds 40QL to the calculations when a lockpick is checking whether it should break.
# This results in a much lower rate of lockpicks breaking. They still take damage when lockpicking.
reduceLockpickBreaking=true
#allowFreedomMyceliumAbsorb: Allows players on Freedom servers that follow Libila to absorb mycelium.
allowFreedomMyceliumAbsorb=true
#largerHouses: Doubles the size that players can construct buildings.
# It does this by multiplying their effective carpentry during planning checks.
largerHouses=true
#TODO: Add option to adjust the carpentry multiplier.
#reduceImbuePower: Reduces the amount of power applied by smearing imbues.
# This does not affect their functionality, simply reduces the amount of power applied per imbue to 1/5th.
reduceImbuePower=true
#TODO: Add option to adjust multiplier on imbue power.
#fixVehicleSpeeds: When updating the speed of a vehicle, the vanilla code uses a random check to determine whether to update.
# This creates scenarios where the speed of a vehicle does not update properly for a long duration.
# For example, when archering a horse, it could take anywhere from 1 to 20 seconds for the speed to properly reduce.
# This option removes that random check and forces it to update immediately whenever the vehicle speed would change.
fixVehicleSpeeds=true
#reduceMailingCosts: Reduces mailing costs from 1 copper to 10 iron.
reduceMailingCosts=true
#TODO: Add option to adjust mailing cost to a percentage of default.
#guardTargetChanges: Prevent guards from assisting in combat with some of the stronger modded creatures.
# Includes: Legendary Creatures, Titans, and Rare Spawns.
guardTargetChanges=true
#enableLibilaStrongwallPvE: Enables Strongwall for Libila on Freedom/PvE servers.
enableLibilaStrongwallPvE=true
#royalCookNoFoodDecay: Royal Cooks (kingdom title) will create "royal" food which is immune to decay.
royalCookNoFoodDecay=true
#mayorsCommandAbandonedVehicles: Allows mayors to take temporary command of vehicles abandoned on their deed.
# This does not allow them to access the contents/hold of the vehicle.
# They can only command the vehicle if it is within their village.
# The vehicle must belong to a player who has not logged in for 7 days.
# If they move the vehicle off their deed and disembark, they will no longer be able to command it.
mayorsCommandAbandonedVehicles=true
#opulenceFoodAffinityTimerIncrease: Adds 0.25% increased timer per power of opulence on a food.
# Example: Food grants 1 minute per bite. With 100 Opulence, it would gain 25% increased timer, giving 1.25 minutes per bite.
opulenceFoodAffinityTimerIncrease=true
#TODO: Add option to configure the amount of increase per opulence power. [Side-note: Maybe add to Spellcraft instead]
#disableFoodFirstBiteBonus: By default, when eating food the affinity timer will give 10x longer duration on the first bite.
# This creates a meta where taking a single bite out of a good affinity meal then waiting for the buff to expire is optimal to conserve food.
# This option disables that first bite bonus, making each bite grant the same duration regardless of whether it's the first
# bite or if they're adding onto an already existing food affinity timer.
disableFoodFirstBiteBonus=true
#bedQualitySleepBonus: The quality of the bed a player sleeps in will increase the amount of sleep bonus obtained after waking up.
# The increase in sleep bonus is equivalent to 0.5% more per QL of the bed. At 100QL, the bed will grant 50% more sleep bonus.
bedQualitySleepBonus=true
#TODO: Add option to configure the amount of bonus the bed QL grants.
#royalSmithImproveFaster: Royal Smiths (kingdom title) will improve smithing items 10% faster.
# This bonus is comparable to having 10 additional Wind of Ages power on the tools using to improve with.
royalSmithImproveFaster=true
#TODO: Add option to configure improve speed bonus.
#fixMountedBodyStrength: When body strength is modded to allow higher carry weights, mounts do not register the increase.
# Issues such as being unable to move on a horse because it thinks you're over encumbered begin to crop up.
# This option fixes that interaction by making the code which handles mounted encumberance to adjust for the increase in strength.
fixMountedBodyStrength=true
#adjustedFoodBiteFill: Adjusts the amount of fill from foods from being linear along the QL axis.
# Instead, it grants more fill than usual at lower QL, but drops off to less fill per QL at higher QL.
# See this graph for the difference: https://i.imgur.com/RsBo86z.png
adjustedFoodBiteFill=true
#TODO: Add additional options to configure the amount of food fill.
#rareMaterialImprove: Allows rare materials to potentially transfer rarity when improving normally, instead of only when consumed.
# This prevents players from being punished by combining rare materials, and offers a more intuitive approach to using rare materials.
rareMaterialImprove=true
#rarityWindowBadLuckProtection: This provides a new system that creates "bad luck protection" in rarity windows.
# Instead of being entirely random, the chance for a rarity window will increase each time the roll fails.
# Every time the roll succeeds, the chance will decrease to adjust. This creates a more even spread of RNG.
# Mathematically, this also helps prevent outliers such as having multiple rarity windows in a row or the opposite of not having any for a long duration.
rarityWindowBadLuckProtection=true
#rareCreationAdjustments: Rarity from creation materials will apply when creating new items.
# The following system only applies to items which are created in their entirety from two consumable resources.
# For example, using a rare handle and a rare sword blade to create a sword would use this system.
# Using a rare anvil and a rare lump will not use this system, since the anvil is not consumed in the process.
# Metallurgy does work. Using rare charcoal with rare iron will produce rare steel, for example.
# When the item is created, it will roll randomly between the two rarities of the resources used to create it, distributed equally.
# For example, using a rare handle with a supreme blade will give a 50% chance at a rare, and 50% chance at a supreme.
# Using a normal handle on that same supreme blade would yield a 33% chance at normal, 33% chance at rare, and 33% chance at supreme.
# Using a fantastic handle on the supreme blade would offer a 50% chance at supreme, 50% chance on fantastic.
# If both items are the same rarity, it completely guarantees that the resulting item will be the same rarity.
# A fantastic handle and a fantstic blade will always create a fantastic sword.
rareCreationAdjustments=true
#alwaysArmourTitleBenefits: Armour titles grant a bonus to improvement when equipped.
# This option grants these bonuses at all times even if the title is not equipped.
alwaysArmourTitleBenefits=true
#tomeUsageAnyAltar: Allows sorcery tomes to be used at any 3x3 flat altar.
# This removes height restrictions, being near water, in a cave, etc. Any flat 3x3 area with an altar will work to use the tome.
tomeUsageAnyAltar=true
#keyOfHeavensLoginOnly: Forces Key of the Heavens to only be able to be used on the login server.
# This is done to prevent issues with deity generation.
keyOfHeavensLoginOnly=true
#lessFillingDrinks: Makes drinks (not water) fill less of the water bar (roughly 1/5 as much as default).
# This allows players to get more use out of affinity drinks.
lessFillingDrinks=true
#TODO: Add additional options to adjust how much less filling drinks are.
#disableHelpGMCommands: Disables GM commands from appearing for non-GM's when using /help. This is a bug with the vanilla game.
disableHelpGMCommands=true
#reduceActionInterruptOnDamage: Reduces the chances of actions being interrupted when taking damage.
# The reduction should be something around 1/2 as likely to be interrupted, though it's hard to tell for sure.
reduceActionInterruptOnDamage=true
#TODO: Add multiplier option for chance to be interrupted.
#fixMissionNullPointerException: In rare instances, the Epic Mission system can fail to properly intialize it's item template list.
# When this happens, there's a chance that another function will call for a random item template.
# Upon execution, it fails to find a random template and crashes the server with a Null Pointer Exception.
# This option fixes this issue and will initialize the list if one does not exist when the server calls for a random template.
fixMissionNullPointerException=true
#disableSmeltingPots: Simply disables the functionality of smelting pots.
# Smelting pots will still exist, but it will display an error "Smelting is disabled." when attempting to smelt.
disableSmeltingPots=true
#hideSorceryBuffBar: Hides the buff icons for sorceries. They can still be found in the Spell Effects window.
hideSorceryBuffBar=true
#sqlAchievementFix: Fixes the errors that occur with achievements in SQL in WU 1.9.
sqlAchievementFix=true
#changePumpkinKingTitle: Changes the Pumpkin King title (100 farming) for females from "Pumpkin King" to "Pumpkin Queen"
changePumpkinKingTitle=true
#changeDeityPassives: Changes some of the deity passives for demigods with ID 101 and 102.
# This option is specifically for compatibility to Revenant for the time being.
changeDeityPassives=true
#TODO: Remove this option and add deity passive configuration to Spellcraft.

## >> END MISCELLANEOUS CHANGES MODULE << ##

## >> ARENA MODULE << ##
## The Arena Module handles many miscellaneous tweaks and additions specific to PvP servers.
## Some of the options here can also have positive impact on PvE servers and were configured here because there was
## overlap in the code where the functionality for Arena-specific features had to be made.
enableArenaModule=true

#equipHorseGearByLeading: Allow players to equip horse gear by simply leading.
# If enabled, this also allows GM's (power 1 and higher) to bypass all restrictions for equipping items on creatures for both PvE and PvP servers.
equipHorseGearByLeading=true
#lockpickingImprovements: Reduces the restrictions for allowing lockpicking.
# On PvP servers, this will make it so basically any container is able to be lockpicked by anyone without permissions getting in the way.
# On PvE servers, this allows players to lockpick chests which are not owned by a player (such as treasure chests from TreasureHunting mod).
lockpickingImprovements=true
#placeDeedsOutsideKingdomInfluence: Allows placing deeds outside of kingdom influence for all kingdoms.
# Keep in mind this also removes the requirement of creating a tower before planting a deed.
placeDeedsOutsideKingdomInfluence=true
#disablePMKs: Disables the ability to create a Player Made Kingdom.
disablePMKs=true
#disablePlayerChampions: Disables the ability for players to become a Champion.
disablePlayerChampions=true
#arenaAggression: Adjusts the aggression for creatures and players towards other players to fit a same-kingdom PvP environment.
arenaAggression=true
#enemyTitleHook: Allows (ENEMY) to be appended to players who are hostile towards eachother in a same-kingdom PvP environment.
# On PvE servers, this also the hook for the extra custom title module.
enemyTitleHook=true
#enemyPresenceOnAggression: Adjusts the enemy presence mechanic to work based on the aggression of a player instead of kingdom.
# By default, in same-kingdom PvP enviornments, a player of the same kingdom will not apply enemy presence in local.
# This option makes it so even if the player is in the same kingdom, if they are considered hostile to the player they will apply enemy presence.
enemyPresenceOnAggression=true
#disableFarwalkerItems: Disables farwalker twigs and farwalker stones on PvP servers.
disableFarwalkerItems=true
#alwaysAllowAffinitySteal: Always allow players to steal affinities from players they slay in PvP combat.
alwaysAllowAffinitySteal=true
#adjustFightSkillGain: Increases fight skill gained on PvP servers by 50%.
# It does this by adding an additional tick of fight skill gain equivalent to 50% of the first tick.
adjustFightSkillGain=true
#TODO: Add additional option to adjust fight skill gain multiplier.
#useAggressionForNearbyEnemies: Changes the check for nearby enemies to use aggression instead of kingdom checks.
# This option is meant to help enable same-kingdom PvP environments.
useAggressionForNearbyEnemies=true
#disablePvPCorpseProtection: Disables the loot protection systems on corpses on PvP servers.
# This allows anyone, regardless of permission status, to loot a corpse when it drops.
disablePvPCorpseProtection=true
#bypassHousePermissions: This bypasses most of the permissions and restriction checks in houses for players on PvP servers.
# This option is meant to help enable same-kingdom PvP environments.
bypassHousePermissions=true
#allowStealingAgainstDeityWishes: Allows players to steal items against their deity wishes without being punished on PvP servers.
# This option is meant to help enable same-kingdom PvP environments.
allowStealingAgainstDeityWishes=true
#sameKingdomVehicleTheft: When a vehicle is unlocked, enemy kingdom players can "take ownership" by commanding the vehicle.
# This option is meant to help enable same-kingdom PvP environments by allowing players to take ownership
# of an unlocked vehicle even if it belongs to a player in the same kingdom as them.
sameKingdomVehicleTheft=true
#adjustMineDoorDamage: Increases the amount of damage done by bashing mine doors by 3x on PvP servers.
adjustMineDoorDamage=true
#TODO: Add option to adjust how much to multiply bash damage by.
#sameKingdomPermissionsAdjustments: Various adjustments to same-kingdom permissions.
# This option is meant to help enable same-kingdom PvP environments.
sameKingdomPermissionsAdjustments=true
#disableCAHelpOnPvP: Disables players from seeing the CA HELP window on PvP servers.
# This can be abused to allow players to see enemy CA's who are online.
disableCAHelpOnPvP=true
#sameKingdomVillageWarfare: Makes players in a village enemies with all other villages that are not in their alliance.
# This option is meant to help enable same-kingdom PvP environments.
sameKingdomVillageWarfare=true
#adjustHotARewards: Adjusts the rewards from winning Hunt of the Ancients.
# Keep in mind one of the rewards that gets added with this option is a key fragment (1/50th of a key of the heavens).
adjustHotARewards=true
#TODO: Add options to further customize the rewards from HotA.
#capMaximumGuards: Caps the maximum amount of guards in a village to 5.
capMaximumGuards=true
#TODO: Add option to configure maximum amount of guards.
#disableTowerConstruction: Disables the ability to construct towers on PvP servers.
# This does not remove existing towers or disable them from being spawned in by GM's.
disableTowerConstruction=true
#adjustLocalRange: Changes the local range on PvP servers from 80 tiles to 50 tiles.
adjustLocalRange=true
#TODO: Add option to configure new local range.
#disableKarmaTeleport: Disables the ability to use Karma Teleport on PvP servers.
disableKarmaTeleport=true
#limitLeadCreatures: Limits the amount of creatures players can lead on PvP servers to 1.
limitLeadCreatures=true
#TODO: Add option to configure how many creatures players can lead at a time.
#adjustBashTimer: Doubles the bash timer for destroying walls/structures.
# This option can be useful for high action speed servers, as the destroy timers are affected by action time multipliers.
adjustBashTimer=true
#TODO: Add option to adjust the base bash timer.
#discordRelayHotAMessages: Adds HotA messages to Discord Relay.
discordRelayHotAMessages=true
#TODO: Add this option to DiscordRelay instead with configuration of channel and similar.
#allowAttackingSameKingdomGuards: Allows players to attack guards of the same kingdom.
# This option is meant to help enable same-kingdom PvP environments.
allowAttackingSameKingdomGuards=true
#fixGuardsAttackingThemselves: If the server is configured for same-kingdom PvP, you can sometimes run into an issue.
# Guards will attempt to target themselves and see themselves as enemies, and try to attack themselves.
# Luckily the game does not allow them to fight themselves. However, they will spam the local log with messages.
# If you encounter this issue, enable this option to stop them from being stupid.
fixGuardsAttackingThemselves=true
#reducedMineDoorOpenTime: Reduces the amount of time a mine door stays open when an enemy passes through from 120 seconds to 30 seconds.
reducedMineDoorOpenTime=true
#allowSameKingdomFightSkillGains: Allow players to gain fight skill from killing members of the same kingdom.
# This option is meant to help enable same-kingdom PvP environments.
allowSameKingdomFightSkillGains=true
#allowArcheringOnSameKingdomDeeds: Allows archery against other players while they are on a same-kingdom deed.
# This option is meant to help enable same-kingdom PvP environments.
allowArcheringOnSameKingdomDeeds=true
#sendNewSpawnQuestionOnPvP: A new spawn question created when a player dies.
# The new spawn question allows them to respawn on another server instead of the one they died on.
# WARNING: I highly recommend disabling this option as it will not work on most servers.
sendNewSpawnQuestionOnPvP=true
#TODO: Improve this option into a minor module and make the new spawn question function well for servers that are not Revenant.
#sendArtifactDigsToDiscord: When a player digs up an artifact, this option will announce the artifact message in Discord.
# The message will be identical to the one found in the Area History for the server.
sendArtifactDigsToDiscord=true
#TODO: Add this option to DiscordRelay instead with configuration of channel and similar.
#makeFreedomFavoredKingdom: Makes Freedom always the favored kingdom on the server. Affects both PvE and PvP servers.
# This option is specifically meant to prevent PvP servers from creating epic missions which favor inactive kingdoms.
# In that way, it is sort of meant to enable same-kingdom PvP environments, but can be useful in other senses as well.
makeFreedomFavoredKingdom=true
#crownInfluenceOnAggression: Converts the Crown of Might influence effect (that grants CR) to affect allies instead of kingdom.
# This option is meant to help enable same-kingdom PvP environments.
crownInfluenceOnAggression=true
#disableOWFL: Disables players from dropping items on their corpse on PvP servers. This option will have no effect on PvE servers.
# OWFL = Open World Full Loot. This option is designed to make a PvP environment where players do not lose their inventory on death.
# This option essentially operates by making an always-functioning resurrection stone apply to every player that dies.
disableOWFL=true
#resurrectionStonesProtectSkill: Players with a resurrection stone will not lose skill upon death. Affects both PvE and PvP servers.
resurrectionStonesProtectSkill=true
#resurrectionStonesProtectFightSkill: Players with a resurrection stone will not lose fighting skill upon death. Affects both PvE and PvP servers.
resurrectionStonesProtectFightSkill=true
#resurrectionStonesProtectAffinities: Players with a resurrection stone will not lose affinities on death on PvP servers.
resurrectionStonesProtectAffinities=true
#bypassPlantedPermissionChecks: Removes all permission checks for if a player can move a planted item on PvP servers.
# This option is meant to help enable same-kingdom PvP environments.
bypassPlantedPermissionChecks=true

## >> END ARENA MODULE << ##

## >> CUSTOM TITLES MODULE << ##
## The Custom Titles Module allows configuration and addition of new titles.
enableCustomTitlesModule=true

#addCustomTitle-#: Adds a custom title. Format: addTitle-#:titleId,maleTitle,femaleTitle,skillId,titleType
# titleId = Some value, preferably greater than 1000, used to index the title that you're adding. These need to be unique to each title.
# maleTitle = The title name when a male character is using the title.
# femaleTitle = The title name when a female character is using the title.
# skillId = The ID of the skill to award this title for. If you don't want to attach this to a skill or don't know what this means, use -1 to disable.
# titleType = The skill level to award at. NORMAL (50), MINOR (70), MASTER (90), LEGENDARY (100). If you aren't using a skillId, then use NORMAL.
addCustomTitle-1:19999,Patron,Patron,-1,NORMAL
addCustomTitle-2:20000,Donator,Donator,-1,NORMAL
addCustomTitle-3:20001,Sindusks Favourite GM,Sindusk Favourite GM,-1,NORMAL
addCustomTitle-4:20002,That Guy,That Guy,-1,NORMAL
addCustomTitle-5:20003,Warriorgens Wife,Warriorgens Wife,-1,NORMAL
addCustomTitle-6:20004,Thorn One,Thorn One,-1,NORMAL
addCustomTitle-7:20005,The care-dependent,The care-dependent,-1,NORMAL
addCustomTitle-8:20006,The Treasuring,The Treasuring,-1,NORMAL
addCustomTitle-9:20007,Science Guy,Science Guy,-1,NORMAL
addCustomTitle-10:20008,Grand Designer,Grand Designer,-1,NORMAL
addCustomTitle-11:20009,The Crazy Cat Lord,The Crazy Cat Lord,-1,NORMAL
addCustomTitle-12:20010,Slave,Slave,-1,NORMAL
addCustomTitle-13:20011,The One True Taco,The One True Taco,-1,NORMAL
addCustomTitle-14:20012,The Great Illuminaty,The Great Illuminaty,-1,NORMAL

# Event Titles
addCustomTitle-100:10002,Pastamancer,Pastamancer,-1,NORMAL

#awardTitle-#: Awards a title to a player on their next login. Format: awardTitle-#:titleId,playerName,playerName,playerName...
# titleId = The id of the title to award the player. This can be the ID of a default title or custom title. Both will work.
# playerName = The name of the player to award the title to.
#  - The playerName option can be repeated for as many players you want to award the title to.
# Example: awardTitle-1:10000,Sindusk,Sindawn,Sinsalt
# If a player already has the title, the system will identify they've already received the title.
# It's safe to leave configurations here for players who have already claimed their title.
awardTitle-1:19999,Atticus
awardTitle-2:20000,Pazza,Warriorgen,Eternallove,Bambam,Svenja,Alexiaselena,Reevi,Seleas,Piratemax,Eltacolad
awardTitle-3:20001,Pazza
awardTitle-4:20002,Warriorgen
awardTitle-5:20003,Eternallove
awardTitle-6:20004,Bambam
awardTitle-7:20005,Svenja
awardTitle-8:20006,Alexiaselena
awardTitle-9:20007,Reevi
awardTitle-10:20008,Genocide
awardTitle-11:20009,Seleas
awardTitle-12:20010,Piratemax
awardTitle-13:20011,Eltacolad
awardTitle-14:20012,Atticus

# Event Titles
awardTitle-100:10002,Critias

## >> END CUSTOM TITLES MODULE << ##

## >> ANTI-CHEAT MODULE << ##
## The Anti-Cheat Module helps mitigate client mods that allow players to utilize data that should never be sent.
## Wyvern Anti-Cheat does NOT prevent ESP mods.
## It does, however, do a fairly effective job at limiting the use of X-Ray and livemap for detecting ores they should not see.
enableAntiCheatModule=true

# > SPOOF HIDDEN ORE < #
# Spoofing hidden ore is the process of falsifying information sent to the client to hide ore they should not be able to see.
# This process works by the server identifying whether or not a player should be able to see a vein of ore through various checks.
# For example, if a vein is surrounded by 4 cave walls, the player should not be able to see that ore since it's completely surrounded.
# This system will "spoof" the data sent from the server to clients in the strip (area) around the vein as normal rock.
# This prevents anyone from using a client mod to see the vein (X-Ray or Livemap for example) which would normally be obscured from view.
# The system will have no effect on veins which players should normally be able to see. Exposed veins are not spoofed.
# Finally, this is also unable to be countered through any client modding efforts. Since there is no difference between the data
# that is sent instead of a normal rock vein, no amount of client modding would be able to surpass this anti-cheat method.
enableSpoofHiddenOre=true
#prospectingVision: This system allows players with high prospecting skill to bypass the spoof system to a certain extent.
# In it's current implementation, after 20 prospecting, players will be allowed to see 1 tile out per 18 prospecting levels.
# For example, a player with 50 prospecting skill would receive proper information to their client up to 3 tiles into a wall.
# This system is meant to give information to players about what exists in a cave system without requiring them to prospect every wall.
prospectingVision=true
#TODO: Add additional options to the spoof hidden ore minor module to configure further operation.

# > END SPOOF HIDDEN ORE < #

#mapSteamIds: This option will map player SteamID's to their name in the modsupport database under SteamIdMap.
# Since this option's creation, there has been a STEAM_IDS table added to the wurmplayers database by default which logs Steam ID's on each login.
# The default system works by logging the access times for each Steam ID and when it was connected, alongside the duration of the login.
# Overall, the default system is more accurate, but it's also quite difficult to read at a glance.
# Viewing a single player's Steam ID will require cross referencing their player WurmID with the PLAYERS table.
# What this option does is make a table that is simply NAME and STEAMID, with one unique entry each.
# This makes it very easy to find a player's Steam ID and ban it, if necessary.
# Additionally, it makes it simple to know all the SteamID's which have been used to access a single account.
# ! This table & option is also required for other certain functions in WyvernMods !
mapSteamIds=true

## >> END ANTI-CHEAT MODULE << ##

## >> QUALITY OF LIFE MODULE << ##
## The Quality Of Life Module includes some additions that improve the general quality of life of gameplay.
## Many of these options are built with a mindset of enhancing the play of normal players,
## but can be abused to significant gain by those who see them as an opportunity to make cheating easier.
## It's important to think of the abuse cases and whether or not you're okay with those abuse cases being
## available before enabling this module or its features.
enableQualityOfLifeModule=true

#mineCaveToVehicle: Allows mining from cave wall directly into a vehicle while commander.
# Requires the fatigue action override under Misc Changes Module to function (otherwise you cannot mine while commanding a vehicle).
# When enabled, this will also deposit the ore directly into a BSB until full if one exists.
# If no BSB exists, it will deposit to crates until full.
# If no crates exist in the vehicle, it will simply mine into the cargo hold of the vehicle until it's full.
# If there is no space in the vehicle for the ore, it will mine to ground as normal until a full pile exists.
mineCaveToVehicle=true
#mineSurfaceToVehicle: Allows surface mining directly into a vehicle while commanding.
# This option is identical to mineCaveToVehicle, but applies to surface mining instead.
# Also requires fatigue action override in Misc Changes Module to function.
mineSurfaceToVehicle=true
#chopLogsToVehicle: Allows chopping up logs directly into a vehicle while commander.
# This option is identical to mineCaveToVehicle, but applies to chopping up logs instead.
# Also requires fatigue action override in Misc Changes Module to function.
chopLogsToVehicle=true
#statuetteAnyMaterial: Allows casting using a statuette of any material.
# By default, a statuette that is not made of gold or silver will not work for spell casting.
# This option changes that functionality by disregarding the material and only checking the item itself.
# Will not allow players to use incorrect statuettes for casting (such as statuette of Fo to cast as a Vynora priest).
statuetteAnyMaterial=true
#mineGemsToVehicle: Allows mining gems and other materials (like salt) directly to vehicle.
# This option is identical to mineCaveToVehicle, but handles tertiary materials like gems and salt instead.
# Also requires fatigue action override in Misc Changes Module to function.
mineGemsToVehicle=true
#regenerateStaminaOnVehicleAnySlope: Allows players to regenerate stamina while on a vehicle regardless of the slope underneath the vehicle.
# By default, if you are on a slope greater than 20 while on a vehicle, you do not regenerate stamina.
# This option removes the 20 slope limitation and allows players to regenerate stamina while on a vehicle so long as they are stationary.
regenerateStaminaOnVehicleAnySlope=true

## >> END QUALITY OF LIFE MODULE << ##

## >> COMBAT MODULE << ##
## The Combat Module offers options that affect the combat aspects of the game.
## This isn't restricted to simply the actual combat itself. It also includes some options to change combat-oriented spells and other mechanics.
enableCombatModule=true

# > COMBAT RATING ADJUSTMENTS < #
# Combat Rating Adjustments involve some tweaks to how combat rating is calculated.
# There are two components: additive and multiplicative combat rating adjustments.
# Additive modifiers are always applied first. This creates a "base" combat rating that is then modified.
# Multiplicative modifiers apply after all additive combat rating adjustments, including vanilla ones.
enableCombatRatingAdjustments=true
#royalExecutionerBonus: Additive - Adds +2 CR against PvE targets while holding Royal Executioner kingdom title.
# The vanilla royal executioner bonus only applies to PvP combat. This option is meant to give it a PvE bonus as well.
royalExecutionerBonus=true
#TODO: Make this option a value instead and allow configuration of how much CR to grant.
#petSoulDepthScaling: Multiplicative - Scales the CR of pets with the Soul Depth of the owner/dominator.
# Applies a multiplier of Soul Depth * 0.02 to the pet's CR. This grants 40% CR at 20 Soul Depth and 200% CR at 100 Soul Depth.
# At 50 Soul Depth this modifier equates to 100%, resulting in no change to the pet's CR.
petSoulDepthScaling=true
#TODO: Make this option a value instead and allow configuration of the CR multiplier per soul depth.
#vehicleCombatRatingPenalty: Multiplicative - Reduces the CR of players on a vehicle by 25%.
# There is no significant offensive penalty for being the commander of a vehicle while in combat.
# This option is meant to encourage players to avoid fighting while on a vehicle.
vehicleCombatRatingPenalty=true
#TODO: Make this option a value instead and allow configuration of the CR multiplier while on a vehicle.
# > END COMBAT RATING ADJUSTMENTS < #

#fixMagranonDamageStacking: In vanilla combat, Magranon/warrior damage bonus (+15% damage from deity) does not stack correctly.
# This applies only in aggressive stance, where the aggressive fighting skill calculations will adjust if the player has warrior bonus.
# When this occurs, it results in a loss of damage from the bonus, making the warrior passive effectively ~10-12% instead of the full 15%.
# This option adjusts the fight skill calculations and forces it to accurately apply the 15% damage bonus regardless of other factors.
fixMagranonDamageStacking=true
#adjustCombatRatingSpellPower: Adjusts the combat rating bonus from Truehit and Excel to 50% of their vanilla values.
adjustCombatRatingSpellPower=true
#TODO: Make this option a multiplier instead of a boolean.
#disableLegendaryRegeneration: Disables the natural healing/regeneration of legendary creatures (uniques).
disableLegendaryRegeneration=true
#useStaticLegendaryRegeneration: Applies a static healing over time to legendary creatures (uniques).
# This option is meant to be used in conjunction with the previous one to make legendaries able to be taken slowly.
# Instead of requiring their defeat in 10 minutes (where they would outheal their attackers), it now regenerates at a set rate.
# This allows players to take their time with uniques and use strategy, so long as the damage inflicted outpaces the natural static regeneration.
# The regeneration is set to 75 health per second (~0.1% maximim health per second). Requires ~874 seconds (14.5 minutes) to heal a full health bar.
useStaticLegendaryRegeneration=true
#TODO: Allow configuration of health regeneration per second.

## >> END COMBAT MODULE << ##

## >> MASTERCRAFT MODULE << ##
## The Mastercraft Module is a new series of systems designed to encourage players to explore end-game crafting further.
## Vanilla settings generally don't encourage players to skill past 90 or improve items past 90.
## The goals of this system, and the settings involved here, are to encourage players to strive for perfection instead of settling at "good enough."
enableMastercraftModule=true

# > DIFFICULTY ADJUSTMENTS < #
# Difficulty Adjustments modify the difficulty when a skill check occurs based on the factors set here.
# This affects almost all systems in the game, from combat to improvement to creation chance to spell power.
# These configurations are aimed at increasing the ways a player can improve their results for any given action.
# By putting time and effort into one's craft, they can more easily improve items to higher levels or be more successful in their activities.
enableDifficultyAdjustments=true
#affinityDifficultyBonus: Reduces the difficulty of actions by 1 per affinity in the skill.
affinityDifficultyBonus=true
#TODO: Make this configuration able to be set to any amount of difficulty reduction.
#legendDifficultyBonus: Grants a reduction to difficulty for all skill over 99.
# Begins at 99.00 skill with no difficulty change, then maxes out at 100.00 skill granting -2 difficulty.
legendDifficultyBonus=true
#masterDifficultyBonus: Grants a reduction to difficulty for all skill over 90.
# Begins at 90.00 skill with no difficulty change, then maxes out at 100.00 skill granting -2 difficulty.
masterDifficultyBonus=true
#TODO: Make the skill scaling a multi-configuration where multiple thresholds can be set for a variety of scaling difficulty changes.
#itemRarityDifficultyBonus: Reduces the difficulty of an action depending on the rarity of the tool being used.
# Normal: No bonus, Rare: -1 difficulty, Supreme: -2 difficulty, Fantastic: -3 difficulty
itemRarityDifficultyBonus=true
#legendItemDifficultyBonus: Reduces the difficulty of an action for all quality over 99 of the tool being used.
# Begins at 99.00 QL with no difficulty change, then maxes out at 100.00 QL granting -1 difficulty.
legendItemDifficultyBonus=true
#masterItemDifficultyBonus: Reduces the difficulty of an action for all quality over 90 of the tool being used.
# Begins at 90.00 QL with no difficulty change, then maxes out at 100.00 QL granting -1 difficulty.
masterItemDifficultyBonus=true
#TODO: Allow further customization of the configurations for difficulty adjustments regarding items.

# > END DIFFICULTY ADJUSTMENTS < #

#empoweredChannelers: Empowers players with up to double the power on their casts based on their channeling skill and affinities.
# This grants +2 power to casts per affinity in channeling.
# Furthermore, it also rolls 4 times up to the value of their channeling skill. It then takes the lowest value and adds it to their cast power.
# !!! Be warned that enabling this option will allow players to perform natural casts of enchants up to roughly 200 power !!!
empoweredChannelers=true
#TODO: Expand on this option and enable more configuration of how the enchant power addition is calculated.
#channelSkillFavorReduction: Reduces the favor costs of spells based on channeling skill.
# Reduces favor cost by 2% per channeling affinity.
# Reduces favor cost by 10% per skill over 99. No bonus at 99.00, scaling to 10% at 100.00 channeling.
# Reduces favor cost by 1% per skill over 90. No bonus at 90.00, scaling to 10% at 100.00 channeling.
channelSkillFavorReduction=true
#TODO: Split up the favor cost reductions, then expand into a multi-configuration style to allow further customization.
#TODO: Also, the code that executes these configurations is old and should be updated with new priest rework code to make it cleaner.

## >> END MASTERCRAFT MODULE << ##

## >> SKILL MODULE << ##
## The Skill Module allows control over the components of skills, including skill gain adjustments.
enableSkillModule=true

# > HYBRID SKILL GAIN < #
# Hybrid Skill Gain is the system which combines the vanilla Wurm Unlimited skill gain system with the classic Wurm Online model.
# In Wurm Unlimited, players gain skill for any successful action whether the result is 0.1 or 100. The skill tick size is the same every action.
# In Wurm Online, players gain skill for any successful action within the range 0 - 40. The skill tick size is based on the duration of the action.
# This new hybrid system makes it so players gain skill for any action, including mild failures (about -20), up to 100.
# However, the system also rewards more skill gain for actions with results closer to zero (if configured that way).
# This was done in order to discourage the "spam creation" skilling method. It is still effective, but improvement is now competitive.
# Visual graph that represents what this skill gain system looks like: https://i.imgur.com/9ykw5dJ.png
# Here is the formula which handles the multiplier for the new skill gain:
# valueAtOneHundred*Math.pow(valueAtZero/valueAtOneHundred, (2-Math.pow(100/(100+Math.max(-99,power)), negativeDecayRate))*Math.pow((100-power)*0.01, positiveDecayRate));
# If you can't read/don't understand that, don't worry! Not many people can! However, if you can read or understand the function,
# you should be able to plug in a formula into Google Sheets, Wolfram Alpha, or Excel and create your own graph where you
# can adjust the following options and give the proper result that you're looking for.
# The default values listed here result in the visual graph represented above.
enableHybridSkillGain=true
#hybridNegativeDecayRate: [Limit: > 0] How fast the function decays past zero going negative.
# Higher values will cause the "midpoint" to move in a positive direction. It will also increase the sharpness of decline after the midpoint.
# Lower values will cause the "midpoint" to move in a negative direction. It will also decrease the sharpness of the decline after the midpoint, resulting a smoother curve.
hybridNegativeDecayRate=5
#hybridPositiveDecayRate: [Limit: > 0] How quickly the function will decay past zero going positive.
# Higher values will result in a sharper curve to the 1.0 multiplier in values greater than zero.
# Lower values will result in a less sharp curve towards the 1.0 multiplier in values greater than zero.
hybridPositiveDecayRate=3
#hybridValueAtZero: [Limit: > 0, must be greater than hybridValueAtOneHundred] What the multiplier should be be when an action results in zero.
hybridValueAtZero=3.74
#hybridValueAtOneHundred: [Limit: > 0, must be less than hybridValueAtZero] What the multiplier should be when an action results in one hundred.
hybridValueAtOneHundred=0.9

# > END HYBRID SKILL GAIN < #

#skillName-#: Changes the name of a skill. Format: skillName-#:skill,newName
# skill = Either the internal ID of a skill or the name of a skill (case insensitive). Example: 1008, mining, MINING, Mining, MiNiNg
# newName = The new name for the skill. Should be allowed to have spaces and other characters, but needs additional testing.
#  - Case will carry to the in-game display, so keep that in mind. Making the new name fully lower case might make it look out of place among other skills.
# Set name of Preaching to Gem Augmentation
skillName-1:Preaching,Gem augmentation
# Set name of Stealing to Soulstealing
skillName-2:Stealing,Soulstealing

#skillDifficulty-#: Changes the internal difficulty of a skill. Format: skillDifficulty-#:skill,difficulty
# skill = Either the internal ID of a skill or the name of a skill (case insensitive). Example: 1008, mining, MINING, Mining, MiNiNg
# difficulty = The new difficulty to set for the skill. Most skills default to 4000. This difficulty will affect the skill gain for that skill.
#  - In the example of a 4000 difficulty skill: 2000 would double skill gain. 8000 would halve skill gain. 6000 would make it 1.5x slower.
#  - For a full list of difficulty for each skill... I don't have one. Nevermind.
# Set mining to 3000 difficulty. Default is 8000. Makes it 2.66x higher skill gain.
skillDifficulty-1:Mining,3000
# Set lockpicking to 700 difficulty. Default is 2000. Makes it 2.85x higher skill gain.
skillDifficulty-2:Lock Picking,700
# Set meditating difficulty to 300. Default is 2000. Makes it 6.66x higher skill gain. Meditating is evil just like the increase.
skillDifficulty-3:Meditating,300

#skillTickTime-#: Changes the tick timer for skill gain on a skill. Format: skillTickTime-#:skill,tickTime
# skill = Either the internal ID of a skill or the name of a skill (case insensitive). Example: 1008, mining, MINING, Mining, MiNiNg
# tickTime = The interval (in milliseconds) before players can gain a skill tick for a skill.
#  - Example: Lock picking has a default of 600000, or 600 seconds, for it's tick time.
#  - This prevents players from being able to gain another skill tick of Lock picking until 600 seconds have passed (10 minutes).
# Set tick time of stealing to zero to remove the 10 minute interval. This is useful for Soulstealing.
skillTickTime-1:Stealing,0
# Set tick time of meditating to 3600 seconds (1 hour).
skillTickTime-2:Meditating,3600000

#changePreachingLocation: Changes the dependencies of Preaching so that it moves under Masonry.
# Recommended to set to false. Option is here temporarily until further work can be done to customize dependencies.
changePreachingLocation=true
#TODO: Add multiple configuration settings to change the dependencies of skills and remove this hold-over option.

## >> END SKILL MODULE << ##

## >> MEDITATION MODULE << ##
## The Meditation Module enables adjustments to the meditation system of Wurm.
## It includes additions that make meditation perks more reasonable at lower levels and scale better as it increases.
enableMeditationModule=true

#simplifyMeditationTerrain: Simplifies the terrain where players can meditate for a question.
# Instead of having to find specific tiles, any tile of the proper type will grant a question:
# - Insanity: Any cave tile
# - Love: Any grass, bush, or tree
# - Hate: Any mycelium, mycelium bush, or infected tree
# - Knowledge: Any sand
# - Power: Any rock or cliff tile (above ground).
simplifyMeditationTerrain=true
#removeInsanitySotG: Removes the Shield of the Gone bonus from Insanity. The buff will still show, but the effect will be gone.
removeInsanitySotG=true
#removeHateWarBonus: Removes the active effect to deal increased damage in combat from Path of Hate. Does not remove the structure damage version.
removeHateWarBonus=true
#insanitySpeedBonus: Adds new effect to Path of Insanity which grants 2% increased action speed per level starting at 7.
# At Insanity level 13, this bonus equates to 12% increased action speed. Does not affect weapon swing speed.
insanitySpeedBonus=true
#TODO: Allow configuration of the speed bonus and level it starts at.
#hateMovementBonus: Adds a new effect to Path of Hate which grants 1% increased movement speed (walking only) per level starting at 3.
# At Hate level 13, this bonus equates to 10% increased movement speed. Does not affect mounted or vehicle movement speed.
hateMovementBonus=true
#TODO: Allow configuration of the movement bonus and level it starts at.
#scalingPowerStaminaBonus: Scales the Path of Power stamina bonus from 30 at level 11 to start at 7 and increase with each level.
# Grants 5 bonus stamina at level 7, and adds 5 additional stamina per level afterwards.
# At Power level 13, this bonus equates to 30 additional Body Stamina.
scalingPowerStaminaBonus=true
#TODO: Allow configuration of the stamina bonus and level it starts at.
#scalingKnowledgeSkillGain: Scales the Path of Knowledge skill gain bonus from 25% at level 11 to start at 7 and increase with each level.
# Grants 5% increased skill gain at level 7, and adds 5% additional skill gain per level afterwards.
# At Knowledge level 13, this bonus grants 30% increased skill gain.
scalingKnowledgeSkillGain=true
#TODO: Allow configuration of the skill gain bonus and level it starts at.
#removeMeditationTickTimer: Removes the vanilla meditation tick timer which is not attached to the skill.
# This tick timer is coded differently from the skill system. It has to be removed like this in order to make the skill system version work.
# Enabling this option will allow you to configure the meditation tick timer using the Skills module.
# Without this enabled, this will override any settings from the Skills module and prevent skill gain unless the meditation system allows it.
removeMeditationTickTimer=true
#newMeditationBuffs: This option is meant to adjust the buff icons for meditation to coincide with all the options above.
# It's recommended to only allow this if all (or at least most) of the options above are enabled.
# Otherwise it probably wont display buffs correctly for some paths.
newMeditationBuffs=true
#TODO: Recode this to make it adjust properly to the configurations set throughout the rest of the module.

# > MEDITATION ABILITY COOLDOWNS < #
# Meditation Ability Cooldowns allow you to set all of the cooldowns for meditation abilities.
# All cooldowns are set using milliseconds. A setting of 1000 means 1 second in this configuration.
enableMeditationAbilityCooldowns=true
#loveRefreshCooldown: Cooldown for Path of Love's Refresh ability. (Default: 64800000 [18 hours])
loveRefreshCooldown=28800000
#loveEnchantNatureCooldown: Cooldown for Path of Love's Enchant Nature ability. (Default: 64800000 [18 hours])
loveEnchantNatureCooldown=28800000
#loveLoveEffectCooldown: Cooldown for Path of Love's Love Effect ability. (Default: 64800000 [18 hours])
loveLoveEffectCooldown=14400000
#hateWarDamageCooldown: Cooldown for Path of Hate's War Damage ability. (Default: 64800000 [18 hours])
hateWarDamageCooldown=21600000
#hateStructureDamageCooldown: Cooldown for Path of Hate's Structure Damage ability. (Default: 64800000 [18 hours])
hateStructureDamageCooldown=14400000
#hateFearCooldown: Cooldown for Path of Hate's Fear ability. (Default: 64800000 [18 hours])
hateFearCooldown=21600000
#powerElementalImmunityCooldown: Cooldown of Path of Power's Elemental Immunity ability. (Default: 64800000 [18 hours])
powerElementalImmunityCooldown=21600000
#powerEruptFreezeCooldown: Cooldown of Path of Power's Erupt/Freeze abilities. (Default: 64800000 [18 hours])
powerEruptFreezeCooldown=28800000
#powerIgnoreTrapsCooldown: Cooldown of Path of Power's Ignore Traps ability. (Default: 64800000 [18 hours])
powerIgnoreTrapsCooldown=14400000
#knowledgeInfoCreatureCooldown: Cooldown of Path of Knowledge's Get Info (Creature) ability. (Default: 64800000 [18 hours])
knowledgeInfoCreatureCooldown=14400000
#knowledgeInfoTileCooldown: Cooldown of Path of Knowledge's Get Info (Tile) ability. (Default: 64800000 [18 hours])
knowledgeInfoTileCooldown=14400000
#TODO: Add the rest of the meditation abilites as configurable options.

# > END MEDITATION ABILITY COOLDOWNS < #

## >> END MEDITATION MODULE << ##

## >> TITAN MODULE << ##
## The Titan Module handles the implementation of Titans, "raid boss" style creatures with unique mechanics.
## These titans are designed to be completely impossible by small groups of players and must be tackled in a sizable group.
enableTitanModule=true

#disableTitanNaturalRegeneration: Disables the natural health regeneration of titans.
disableTitanNaturalRegeneration=true
#pollTitanSpawnTime: Amount of time, in milliseconds, to poll the new spawn of a titan.
# This is not the time for a new titan to spawn, just how frequently the server will check to see if a new one should spawn.
# Default is 120000, or 2 minutes.
pollTitanSpawnTime=120000
#pollTitanTime: Amount of time, in milliseconds, to poll mechanics on the titan.
# This is how frequently it will check to do mechanics during a titan fight. The less frequent the polling, the less often mechanics will occur.
# Default is 1000, or 1 second.
pollTitanTime=1000
#titanRespawnTime: Amount of time, in milliseconds, between spawns of new titans.
# There can only be one titan active on a server at a time. This timer will determine how long after the previous spawn a new one should be spawned.
# Default is 288000000, or 80 hours (3 days 8 hours)
titanRespawnTime=288000000
#TODO: Add additional configurations for which titans should be allowed to spawn, their loot, mechanics, and more.

## >> END TITAN MODULE << ##

## >> RARE SPAWN MODULE << ##
## The Rare Spawn Module handles the spawning of new creatures which are designed to be stronger than trolls but weaker than legendary creatures.
## This helps fill the gap for small hunting parties, allowing groups of 2-5 slay challenging creatures.
enableRareSpawnModule=true

#pollRareSpawnTime: Amount of time, in milliseconds, to check spawning of a new rare spawn.
# Rare spawns occur if no other rare spawn is found on the server. As soon as one dies, another replaces it.
pollRareSpawnTime=300000
#TODO: Add additional configurations for which rare spawns should be allowed to spawn, their loot, additional creature spawns, and more.

## >> END RARE SPAWN MODULE << ##

## >> MISSION MODULE << ##
## The Mission Module adds additional features to the existing epic mission features.
## It also helps integrate them more easily into PvE environments by making them more frequent and rewarding.
## Finally, it also helps clear up some bugs which prevent them from occurring properly under some scenarios.
enableMissionModule=true

# > NEW MISSION CREATOR < #
# New Mission Creator is a system that's independent of the natural mission creation system.
# This handles the creation of new missions in a more precise way than the vanilla handling, which sometimes doesn't function as intended.
# Instead of creation of a mission at random, it will always create a new mission on a timer (set below).
# The only case where it will not create a new missions is if there is already the maximum amount of missions available (1 per entity).
# When missions expire in the default system, there are generally issues with removal of those missions to make room for more.
# This system also double-checks all active missions when the poll occurs, removing any missions which have been expired or completed.
# The process helps open up new slots for missions to be created in a more timely and clean manner.
enableNewMissionCreator=true

#pollMissionCreatorTime: Amount of time, in milliseconds, to poll the creation of new missions using the New Mission Creator.
# This handles how frequently new missions are added to the system. If you want a new mission every day, set to 1 day worth of milliseconds.
# Default is 14400000, or 4 hours.
pollMissionCreatorTime=14400000
#useValreiEntities: Whether to use Valrei Entities as the creators for some missions.
# This option extends the default system to include entities such as Walnut, Jackal, and Scavenger to add new missions.
# Using the New Mission Creator, this will allow up to 11 missions to be active at a time instead of the default 4.
useValreiEntities=true
#TODO: Add additional options for control over what missions are created.

# > END NEW MISSION CREATOR < #

#addMissionCurrencyReward: Adds a 20-40 copper reward at random for players who participated in the completion of a mission.
addMissionCurrencyReward=true
#TODO: Allow configuration of the currency reward.
#preventMissionOceanSpawns: Prevents mission creatures from spawning in water.
preventMissionOceanSpawns=true
#additionalHerbivoreChecks: Adds additional checks when the system attempts to spawn a herbivore epic creature.
# This prevents legendary creatures, titans, and rare spawns from being used in epic missions which shouldn't allow them.
additionalHerbivoreChecks=true
#additionalMissionSlayableChecks: Adds additional checks when the system attempts to spawn an epic mission slayable creature.
# This prevents legendary creatures, titans, and rare spawns from being used in epic missions which shouldn't allow them.
additionalMissionSlayableChecks=true
#disableEpicMissionTypes: Disables the Ritual, Destroy Guard Tower, and Slay Tower Guards mission types from the system.
# This helps prevent missions from occurring which can be annoying or impossible to complete in some enviornments.
disableEpicMissionTypes=true
#TODO: Allow configuration of which types of missions to disable.

## >> END MISSION MODULE << ##

## >> MOUNTED MODULE << ##
## The Mounted Module handles various changes to mounts such as horses.
## It does not affect vehicle speeds, and strictly relates to creature mounts.
enableMountedModule=true
#newMountSpeedScaling: Changes the way hunger and health affects the mounted speed of a creature. Explanation:
# Mount speed has been completely redone from the ground up, using new formulas and different weights.
# Mount speed now scales from all the variables used to calculate speed.
# The thresholds for damage and hunger have been removed and replaced by a formula with a smoothed function to calculate the new speeds.
# Equipment on mounts now scale the speed multiplicatively instead of additively.
# - This means that well-equipped mounts will no longer be able to run decently fast when extremely hurt.
# - If they're low on health, they move slow, period.
# Barding now has a multiplicative speed reduction. Cloth offers the lowest penalty, while chain incurs the largest penalty.
# Traits remain additive to the hunger and health modifiers, but are now scaled multiplicatively by gear and other effects.
# Oakshell now has an slowing effect on the speed of a mount depending on power.
# - This effect is more severe than the epic iteration of the spell, applying a multiplicative slow to the creature.
# Old chart: https://i.imgur.com/bgVY8ne.png
# New chart: https://i.imgur.com/2IYEsA1.png
newMountSpeedScaling=true
#TODO: Add additional options for scaling of WoA/BoTD effects, QL scaling, etc.
#updateMountSpeedOnDamage: Forces a mount's speed to update instantaneously when it takes damage.
# In the vanilla system, there is a random factor where dealing damage to a mount can take a random amount of time to update.
# Through testing, this could take up to 20 seconds or even longer, since the update was random.
# This setting prevents that from happening, and hard-forces the server to update the mount speed immediately when the mount takes damage.
updateMountSpeedOnDamage=true
#allowBisonMounts: Allows Bison to be mounted, just like a horse. If it can pull a wagon, why not hold a person?
allowBisonMounts=true
#TODO: Enable configuration of bison mount speeds. In the meantime, might be able to be adjusted through bdew's movement mod.

## >> END MOUNTED MODULE << ##

## >> TELEPORT MODULE << ##
## The Teleport Module handles custom teleportation between two servers with additional features.
## Instead of requiring one server to always give the exact location where the player should arrive on the other side,
## the Teleport Module uses a new method which allows the player to land at either their village token or random location.
enableTeleportModule=true

#useArenaTeleportMethod: Uses a special method when specific coordinates are given on a server to either randomize location
# place them at their village token on the new server.
# ! Most of this system is hardcoded and will not function well on a server that is not Revenant !
useArenaTeleportMethod=true
#TODO: Expand this system and make it more configurable. Document more clearly.

## >> END TELEPORT MODULE << ##

## >> ECONOMY MODULE << ##
## The Economy Module handles pricing of items and various mechanics involving currency and traders.
enableEconomyModule=true

#adjustSealedMapValue: The Sealed Map is a custom item which creates a Treasure Map (from TreasureHunting mod) when unsealed.
# This option adjusts their value so it is not static, and instead scaled based on the QL of the sealed map.
adjustSealedMapValue=true
#TODO: Add additional options to adjust the price of sealed maps.
#disableTraderRefill: Disables Traders from refilling their currency from the king's coffers at random.
# Other methods of refilling their currency will be required if you disable this.
disableTraderRefill=true
#voidTraderMoney: When players buy items from traders, by default all the money goes into the trader to be extracted again.
# This option voids 80% of the currency that gets traded to traders, preventing players from simply draining their spent currency out immediately.
voidTraderMoney=true

## >> END ECONOMY MODULE << ##

## >> SUPPLY DEPOT MODULE << ##
## The Supply Depot Module implements a new system where supply depots are spawned randomly on the map to be claimed by players.
## These depots will reward the player if they manage to stand near the depot without interruption for a certain amount of time.
## On PvP servers, these can create interesting combat scenarios in locations that are unexpected.
enableSupplyDepotModule=true

#useSupplyDepotLights: Whether or not to use the "rift beam" light to mark the locations of depots for all players on the map.
useSupplyDepotLights=true
#pollDepotTime: Amount of time, in milliseconds, to poll supply depots.
# This is not the amount of time before new ones spawn, but just how often it checks if they should be spawned, cleared, and similar.
# Default is 60000, or 1 minute.
pollDepotTime=60000
#captureMessageInterval: Amount of time, in milliseconds, to wait before allowing another global capture message to occur.
# This prevents players from spamming the capture action to create global messages for players.
# Default is 180000, or 3 minutes.
captureMessageInterval=180000
#depotRespawnTime: Amount of time, in milliseconds, between spawns of depots.
# This is calculated from the last spawn of a depot, not the last capture.
# Default is 39600000, or 11 hours.
depotRespawnTime=39600000
#TODO: Allow configuration of rewards from depots and other options.

## >> END SUPPLY DEPOT MODULE << ##

## >> BESTIARY MODULE << ##
## The Bestiary Module controls a variety of features regarding creatures in Wurm.
## This module includes options that controls creature attributes, changing their behavior, and additions of new creatures.
enableBestiaryModule=true

#fixSacrificingStrongCreatures: Removes the ability to sacrifice strong modded creatures such as titans and rare spawns.
fixSacrificingStrongCreatures=true
#disableAfkTraining: Disables afk training by doing combat with a creature while not targeting it.
# This is usually called "shield training" when you engage in combat with a creature then target another to prevent attacking it back.
# With this enabled, it will prevent players from gaining skill from a creature unless they are targeting it as well.
# If DUSKombat is active, this is built into it. Probably not necessary to enable if you have DUSKombat installed, but will do no harm if enabled.
disableAfkTraining=true
#fixChargersWalkingThroughWalls: By default, since Chargers are considered ghost units like templars, they are allowed to walk through walls.
# This option will add a hard override to their pathing and prevent them from walking through walls despite being ghosts.
fixChargersWalkingThroughWalls=true
#conditionWildCreatures: Adds conditions randomly to creatures spawned naturally in the wild.
# By default, only creatures spawned from a den will have a condition (greenish, angry, etc.)
# This option will allow *any* natural spawn to have a condition.
# Will not affect creatures which cannot have a condition by default (such as horses, pigs, etc)
# Chance is 1/5 for a random condition, and 1/250 to be a champion.
conditionWildCreatures=true
#allowGhostArchery: Allows archery against targets marked as "ghosts" - including chargers and spirit templars.
# This is done to prevent players from mounting chargers and being immune to archery to dismount them.
allowGhostArchery=true
#disableArcheryOnStrongCreatures: Disables archery against strong creatures such as titans and rare spawns.
disableArcheryOnStrongCreatures=true
#genesisEnchantedGrassNewborns: When a new creature is born on enchanted grass, it will automatically remove a negative trait.
genesisEnchantedGrassNewborns=true
#useCustomCorpseSizes: Custom creatures can sometimes have poor corpse sizes when slain.
# This option fixes that issue by utilizing custom corpse sizes when they die and adjusting the size to be closer to their normal size.
useCustomCorpseSizes=true
#allowCustomCreatureBreedNames: Allows some custom creatures (Chargers) to have breeding names similar to horses.
allowCustomCreatureBreedNames=true
#allowGhostBreeding: Allows breeding of ghost creatures (such as Chargers).
allowGhostBreeding=true
#allowGhostCorpses: Allows ghost creatures (Chargers and Spirit Trolls) to drop corpses.
allowGhostCorpses=true
#useCustomCreatureSizes: Adjusts the size of creatures when they're alive.
# This makes wyverns smaller than drakes, forest spiders smaller than large spiders, etc.
useCustomCreatureSizes=true
#TODO: Allow custom settings for unit sizes.
#useCustomCreatureSFX: Uses special effects to augment some of the custom creatures (such as fire crabs).
useCustomCreatureSFX=true
#preventLegendaryHitching: When a player dominates a legendary creature such as a dragon, it can sometimes be hitched.
# When hitched, it uses the body strength of the creature to determine speed of the vehicle.
# This usually results in vehicles that go ~30-40kmh. This option prevents this instance from occurring.
preventLegendaryHitching=true
#modifyNewCreatures: Modifies custom creatures in a variety of ways to make sure they function properly.
# Also handles announcement of some custom creatures such as titans.
modifyNewCreatures=true
#logCreatureSpawns: Logs all spawns of creatures to the server log. This is purely informative and has no gameplay effect.
logCreatureSpawns=true
#allowEpicCreatureNaturalSpawns: Allows Sol Demons, Lava Fiends, and Worgs to spawn naturally in the world.
# Sol Demons and Lava Fiends spawn on sand. Worgs spawn on grass and steppe.
allowEpicCreatureNaturalSpawns=true
#TODO: Enable customization of the spawn rates for creatures individually.

# > CUSTOM CREATURES < #
# Custom Creatures are new creatures independent from vanilla ones that are designed to add additional content for players.
enableCustomCreatures=true
#TODO: This module needs to be restructured to allow configuration of each creature independently.

#enableWyverns: Enables the Black, Blue, Green, Red, and White Wyvern creatures.
# These are difficult creatures that spawn naturally on unique tilesets.
# All are able to be mounted and hitched.
# They are unable to spawn on PvP servers.
enableWyverns=true
#enableFlavorMobs: Enables the Avenger, Fire Crab, Forest Spider, Giant, Charger, Horned Pony, Large Boar, and Spirit Troll creatures.
# These creatures all spawn naturally.
# Giants and Avengers are unable to spawn on PvP servers.
enableFlavorMobs=true
#enableEventMobs: Enables the Ice Cat, Fire Giant, Terror, and Guardian of Magranon event creatures.
# These creatures do not spawn naturally.
enableEventMobs=true
#enableRareSpawns: Enables the Reaper and Spectral Drake creatures.
# These creatures only spawn naturally if using the Rare Spawns module.
enableRareSpawns=true
#enableCustomLegendaries: Enables the Facebreyker legendary creature.
# Only spawns naturally if using the Misc Changes addition to add to the spawn list.
enableCustomLegendaries=true
#enableTitans: Enables the Ifrit and Lilith titan creatures. Also includes their additional creatures.
# Only spawns naturally if configured to do so through the Titan module.
enableTitans=true

# > END CUSTOM CREATURES < #

## >> END BESTIARY MODULE << ##

## >> BOUNTY MODULE << ##
## The Bounty Module handles effects and rewards that occur when a player slays a creature.
enableBountyModule=true
#TODO: This module needs to be restructured to give more options for what type of drops and rewards occur.

#usePlayerBounty: Allows players to be rewarded directly when they slay a creature.
usePlayerBounty=true
#TODO: Give further options for player bounty.
#useLootTable: Allows creatures to drop rewards on their corpses.
useLootTable=true
#TODO: Give further options for loot tables.

## >> END BOUNTY MODULE << ##

## >> ITEM MODULE << ##
## The Item Module handles the implementation of new items and their effects.
## It also grants options that change default items in a variety of ways.
enableItemModule=true
#TODO: This module needs to be restructured to give more options regarding each individual item instead of using true/false.

#combineLeather: Allows leather to be combined.
# Will prevent improvement with leather lower than item QL unless the Misc Changes configuration is enabled.
combineLeather=true
#combineLogs: Allows logs to be combined.
combineLogs=true
#reduceLogVolume: Reduces the volume of logs by 50%, making twice as many fit in bulk containers.
# This also makes them easier to fit into containers that otherwise would not hold them.
reduceLogVolume=true
#reduceKindlingVolume: Reduces the volume of kindling by 75%, preventing them from being technically larger than logs.
# In vanilla gameplay, turning logs into kindling would actually yield a higher volume of material... which doesn't make sense.
reduceKindlingVolume=true
#droppableSleepPowder: Allows sleep powder to be dropped.
# This will cause players to drop sleep powder if they die, but also makes them able to be mailed.
droppableSleepPowder=true
#setSilverMirrorPrice: Sets silver mirrors to cost 20 silver instead of 1 iron. This should allow them to be sold on traders.
setSilverMirrorPrice=true
#setGoldMirrorPrice: Sets gold mirrors to cost 1 gold instead of 1 iron. This should allow them to be sold on traders.
setGoldMirrorPrice=true
#setCreatureCratePrice: Sets creature cages to cost 10 silver. This allows them to be sold on traders.
setCreatureCratePrice=true
#setResurrectionStonePrice: Sets resurrection stones to cost 2 silver instead of 5 silver.
setResurrectionStonePrice=true
#loadableMailbox: Allows mailboxes (spirit cottage, spirit castle, etc) to be loaded into vehicles.
# Does not work on PvP servers even if enabled.
loadableMailbox=true
#loadableBellTower: Allows bell towers to be loaded into vehicles.
loadableBellTower=true
#loadableTrashBin: Allows trash bins to be loaded into vehicles.
loadableTrashBin=true
#loadableAltars: Allows altars (wood, stone, silver, gold) to be loaded into vehicles.
# Does not affect the huge altars (White Light and Black Light).
loadableAltars=true
#oneHandedLongSpear: Makes long spears one-handed, allowing them to be equipped in dual wield or with a shield.
oneHandedLongSpear=true
#reduceDirtDifficulty: Reduces the difficulty of crafting dirt from 99 to 50.
# Dirt by default has no crafting recipe so this does nothing on it's own.
reduceDirtDifficulty=true
#reduceSandDifficulty: Reduces the difficulty of crafting sand from 99 to 50.
# Sand by default has no crafting recipe so this does nothing on it's own.
reduceSandDifficulty=true
#reduceSandstoneDifficulty: Reduces the difficulty of crafting sandstone from 99 to 50.
# Sandstone by default has no crafting recipe so this does nothing on it's own.
reduceSandstoneDifficulty=true
#decorationStoneKeystone: Makes stone keystones into a decoration item.
# This prevents them from going into piles of items when dropped, allowing them to be used for decorative purposes.
decorationStoneKeystone=true
#decorationMarbleKeystone: Makes marble keystons into a decoration item.
# This prevents them from going into piles of items when dropped, allowing them to be used for decorative purposes.
decorationMarbleKeystone=true
#useCustomCacheFragments: Modifies the fragment count for archaeology with the custom caches from WyvernMods.
useCustomCacheFragments=true
#adjustStatueFragmentCount: Adjusts the fragment count for some statues in Archaeology.
# Worg and Eagle: 40 fragments.
# Hell Horse and Drake: 45 fragments.
# Fo, Magranon, Libila, and Vynora: 50 fragments.
adjustStatueFragmentCount=true
#removeLockpickSkillRequirement: Removes the 20 locksmithing requirement to begin crafting lockpicks.
# If the quality of materials is too low, players might still not be able to craft them with less than 20 skill.
removeLockpickSkillRequirement=true
#createCustomItemTemplates: Creates the item templates for the custom items from WyvernMods.
# This only initializes the item so it can be used on the server. Enabling this option does not make any items craftable.
# The ability to craft items is set in other configurations below this one.
# It is highly recommended to enable this and keep it enabled if you plan on using any of the custom items.
# If you want to remove an item, disabling this is not advised. Instead, remove the ability to craft that item in other configurations.
createCustomItemTemplates=true

# > CUSTOM ITEM CREATION < #
# Custom Item Creation identifies which of the custom items you want to have be player-made.
# Each option will list the creation recipe and requirements.
enableCustomItemCreation=true
#TODO: Recode to allow custom recipes for both modded items and non-modded items.

#craftHuntingArrowPacks: Creation Entry for Hunting Arrow Packs.
# Start with quiver + hunting arrow. Finish with 39 additional hunting arrows.
# Uses Fletching and requires 50 skill to begin.
craftHuntingArrowPacks=true
#craftWarArrowPacks: Creation Entry for War Arrow Packs.
# Start with quiver + war arrow. Finish with 39 additional war arrows.
# Uses Fletching and requires 50 skill to begin.
craftWarArrowPacks=true
#craftBattleYoyo: Creation Entry for Battle Yoyo.
# Crafted with a string of cloth and shaft.
# Uses Toymaking.
craftBattleYoyo=true
#craftClub: Creation Entry for Club.
# Crafted using a carving knife on a log.
# Uses Carpentry.
craftClub=true
#craftDepthDrill: Creation Entry for Depth Drill.
# Start with ribbon and shaft. Finish with a two wooden handles and a small nails.
# Uses Fine Carpentry.
craftDepthDrill=true
#craftEternalReservoir: Creation Entry for Eternal Reservoir. Used in Soulstealing.
# Start with a star diamond + dirt. Finish with 99 additional dirt, 200 pottery bricks, 30 chaos crystals, and 20 hearts.
# Uses Pottery.
craftEternalReservoir=true
#craftEviscerator: Creation Entry for Eviscerator. NOTE: This is meant to be a GM-only weapon.
# Crafted using a Wilhelm's Wrath on another Wilhelm's Wrath. This is not intended to be done.
# Uses Weapon Smithing.
# This creation entry is only made to enable the material functionality on the weapon. It is not meant to be used.
# The Eviscerator is a weapon designed to help with testing against tough targets (like titans) because it does insane damage.
craftEviscerator=true
#craftKnuckles: Creation Entry for Knuckles.
# Crafted using a lump of metal on a small anvil.
# Uses Weapon Heads Smithing.
craftKnuckles=true
#craftMassStorageUnit: Creation Entry for Mass Storage Unit.
# Start with wood beam + wood beam. Finish with 500 planks, 200 shafts, 50 ribbons, and 100 large nails.
# Uses Fine Carpentry and requires 70 skill to begin.
craftMassStorageUnit=true
#craftStatuetteDeities: Creation Entries for statuette of (Demigod).
# Created the same way normal statuettes are.
# The current statuettes are Thelastdab and Reevi. These are hardcoded.
craftStatuetteDeities=true
#TODO: Allow creation of new deity statuettes through configuration.
#craftWarhammer: Creation Entry for Warhammer and Warhammer Head.
# Warhammer Head is crafted using a lump of metal on a large anvil.
# Warhammer is crafted using a Warhammer Head on a shaft.
# Both use Weapon Heads Smithing.
craftWarhammer=true

# > END CUSTOM ITEM CREATION < #

## >> END ITEM MODULE << ##

## >> SOULSTEALING MODULE << ##
## The Soulstealing Module is the implementation of a new skill, Soulstealing. This replaces the standard Stealing skill.
## When a creature dies, players can use a Sacrificial Knife to collect the creature's soul instead of butchering it.
## Stealing the soul will generate a small item, a soul, which can then be used for various purposes.
## When the soul is stolen, the corpse of the creature will be removed. This makes Soulstealing a handy skill for light hunting.
## Souls can be used in the Eternal Reservoir to charge it, which will automatically feed carnivore creatures nearby and keep forges and ovens lit.
enableSoulstealingModule=true
#TODO: This section needs more configurations for the eternal reservoir effects and how soulstealing functions.

#pollEternalReservoirTime: Amount of time, in milliseconds, to poll Eternal Reservoirs for their effects.
# This will reduce their fuel and provide the effects of feeding nearby carnivores and lighting nearby forges and ovens.
# Default is 600000, or 10 minutes.
pollEternalReservoirTime=600000

## >> END SOULSTEALING MODULE << ##

## >> ACTION MODULE << ##
## The Action Module handles new actions which are unrelated to other functions. Some serve as QoL and others as new features.
enableActionModule=true

#actionUnequipAll: Provides an "Unequip All" action when players right-click an item they are wearing.
# This is slightly different than the body action for Unequip All that was added to the base game. It does not conflict with it.
actionUnequipAll=true
#actionReceiveAllMail: Provides a "Receive All Mail" action when players right-click a mailbox.
# This will not accept CoD items, and only accepts mail with no cost.
# It will accept up to 100 items at a time and place them in the mailbox upon action completion.
actionReceiveAllMail=true
#actionSplitSorcery: Provides a "Split Sorcery" action when players right-click any sorcery/tome.
# This allows them to split it into several tomes each with one charge.
# Amount of items granted is equivalent to the amount of charges in the original sorcery/tome.
actionSplitSorcery=true
#actionLeaderboard: Provides a "Leaderboard" action when players right-click their body. Also works when right-clicking skills.
# This opens up a full leaderboard dialogue where players can see the skill levels, achievements, and similar of other players.
# The system is opt-in, with each player opted out by default.
actionLeaderboard=true
#TODO: Allow customization of the leaderboard dialogue colors and similar.
#actionSorceryFragmentCombine: Allows sorcery fragments to be combined at a huge altar (White Light or Black Light).
actionSorceryFragmentCombine=true
#actionArenaTeleports: Provides the "Arena Teleport" and "Arena Escape" actions.
# These are hardcoded heavily for Revenant and likely will not work well on any other server.
actionArenaTeleports=true
#TODO: Expand on these actions to enable better teleportation options.
#actionAddMissionDev: Adds action "Add Mission" to the body of GM power 5 accounts.
# This adds a random mission using the custom Mission Creator.
actionAddMissionDev=true
#TODO: Allow configuration of power requirement.
#actionRemoveMissionDev: Adds action "Remove Mission" to the body of GM power 5 accounts.
# This removes a random active mission.
actionRemoveMissionDev=true
#TODO: Allow configuration of power requirement.
#actionCreatureReportDev: Adds action "Creature Report" to the body of GM power 5 accounts.
# This provides a list of current creatures on the server.
# Thanks to Bdew for providing the code to make this action work.
actionCreatureReportDev=true
#TODO: Allow configuration of power requirement.
#actionSmoothTerrainDev: Adds action "Smooth Terrain" when targeting a tile corner for GM power 5 accounts.
# This will enact "erosion" on the area and smooth the terrain by 1 step.
# Binding the action to a key and pressing it multiple times will demonstrate the effects of the Erosion system.
actionSmoothTerrainDev=true
#TODO: Allow configuration of the power requirement.

## >> END ACTION MODULE << ##

## >> EROSION MODULE << ##
## The Erosion Module handles a new system that helps smooth the terrain on otherwise bumpy maps.
## In some cases, the heightmap generation when making a new map is flawed and will create a very bumpy terrain.
## The erosion system is a slow but effective method by which to smooth the bumps in the terrain and make it more natural.
## This operation occurs on an interval, but is fairly expensive when it executes.
## If you notice laggspikes while this system is enabled, it is recommended that you either disable it or increase the interval.
enableErosionModule=true

#pollTerrainSmoothTime: Amount of time, in milliseconds, between each terrain smoothing attempt.
# This operation selects a random spot on the map and smooths a 10x10 area.
# Default is 5000, or 5 seconds.
pollTerrainSmoothTime=5000

## >> END EROSION MODULE << ##

## >> TREASURE CHEST LOOT MODULE << ##
## The Treasure Chest Loot Module affects the vanilla treasure chests.
## By default, treasure chests can spawn randomly in the wild. This module reconfigures the loot that spawns in them.
enableTreasureChestLootModule=true

# TODO: Add additional options to configure the loot granted from treasure chests.
## >> END TREASURE CHEST LOOT MODULE << ##
